class STree{
public:
    vector<int>seg;
    STree(int n){
        seg.resize(4*n+1);
    }

    void build(vector<int>&freq,int ind,int low,int high){
        if(low==high){
            seg[ind]=freq[low];
            return;
        }
        int mid=low+(high-low)/2;
        build(freq,2*ind+1,low,mid);
        build(freq,2*ind+2,mid+1,high);
        seg[ind]=seg[2*ind+1]+seg[2*ind+2];
    }

    void update(int ind,int low,int high,int i,int val){
        if(low==high){
            seg[ind]+=val;
            return;
        }
        int mid=low+(high-low)/2;
        if(i<=mid)  update(2*ind+1,low,mid,i,val);
        else    update(2*ind+2,mid+1,high,i,val);
        seg[ind]=seg[2*ind+1]+seg[2*ind+2];
    }

    int query(int ind,int low,int high,int l,int r){

        if(high<l or low>r) return 0;

        if(low>=l and high<=r)
            return seg[ind];
        
        int mid=low+(high-low)/2;
        int left=query(2*ind+1,low,mid,l,r);
        int right=query(2*ind+2,mid+1,high,l,r);
        return left+right;
    }

};
